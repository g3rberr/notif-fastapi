services:
  api:
    build: .
    container_name: notif_api
    env_file: .env
    command:
      - uvicorn
      - app.main:app
      - --host
      - 0.0.0.0
      - --port
      - "8000"
      - --workers
      - "16"
      - --no-server-header
      - --no-access-log
      - --log-level
      - warning
      - --backlog
      - "4096"
      - --timeout-keep-alive
      - "5"
      - --loop
      - uvloop
      - --http
      - httptools
    ports:
      - "8000:8000"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started


  worker:
    build: .
    container_name: notif_worker
    env_file: .env
    command:
      - celery
      - -A
      - app.services.celery_app.celery
      - worker
      - --loglevel=info
      - --concurrency=8
      - --prefetch-multiplier=1
      - --queues=default
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ulimits:
      nofile:
        soft: 65535
        hard: 65535

 
  dispatcher:
    build: .
    container_name: notif_dispatcher
    env_file: .env
    command:
      - python
      - -m
      - app.services.dispatcher
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  flower:
    build: .
    container_name: notif_flower
    env_file: .env
    command: ["celery", "-A", "app.services.celery_app.celery", "flower", "--port=5555"]
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_started

  db:
    image: postgres:15
    container_name: notif_pg
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    command: ["postgres", "-c", "max_connections=400", "-c", "shared_buffers=256MB"]
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h 127.0.0.1"]
      interval: 3s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    container_name: notif_redis
    command:
      - redis-server
      - --save
      - --appendonly
      - "no"
      - --maxclients
      - "20000"
      - --tcp-backlog
      - "65535"
      - --timeout
      - "0"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 20


volumes:
  pgdata:
